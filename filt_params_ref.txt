GENERAL PARAMETERS:

num_divisions - default value: 50
How many steps the filtration should be comprised of. The filtration parameter will be divided up equally in the interval [min_filtration_param, max_filtration_param].

max_filtration_param - default value: -20
The maximum value for the filtration parameter. If it is a negative integer, -x, the program will automatically choose the max filtration parameter such that the highest dimensional simplex constructed is of dimension x - 1.

min_filtration_param - default value: 0
The minimum value for the filtration parameter. Zero is usually fine.

start - default value: 0
How many lines to skip in the input file before reading data in.

worm-length - default value: 0
How many witnesses the program will read from the data file. If set to zero, the program will read the file to the end. In general, a reasonable cap we have found is 10,000 witnesses and 200 or less landmarks.

ds_rate - default value: 50
The ratio of number of witnesses / number of landmarks.

landmark_selector - default value: "maxmin"
How the landmarks are selected from among the witnesses. Only options are "EST" for equally spaced in time and "maxmin" for a max-min distance algorithm.



WITNESS RELATION:

absolute - default value: False
The standard fuzzy witness relation says that a witness witnesses a simplex if the distance from the witness to each of the landmarks is within epsilon *more* than the distance to the closest landmark. If using the absolute relation, the closest landmark is dropped from the calculation, and the distance from a witness to each of the landmarks must be within epsilon of zero.

use_cliques - default value: False
If this is set to True, than witnesses are only used to connect edges, and higher simplices (faces, solids, etc.) are inferred from the 1-skeleton graph using the Bron-Kerbosch maximal clique finding algorithm. This can be useful in reducing noise if several of the false holes are triangles.

simplex_cutoff - default value: 0
If not equal to zero, this caps the number of landmarks a witness can witness. Note: this does not effect automatic max_filtration_param selection.

weak - default value: False
Uses a completely different relation. The filtration parameter k specifies that each witness will witness a simplex of its k-nearest neighbors. If this relation is used, max_filtration_param should be a positive integer, and num_divisions and min_filtration_param will be ignored.

use_twr - default value: False.
Uses a completely different algorithm. TODO: insert your description here. Note: this works best with EST landmark selection. If max-min is used, be sure to set time_order_landmarks to True.



DISTANCE DISTORTIONS:

d_speed_amplify - default value: 1
The factor by which distances are divided if the witness is at a relatively high speed.

d_orientation_amplify - default value: 1
The factor by which distances are divided if the witness and the landmark are travelling in similar directions.

d_stretch - default value: 1
The factor by which distances are divided if the vector from the witness to the landmark is in a similar direction (possibly backwards) as the direction in which time is flowing at the witness.

d_ray_distance_amplify - default value: 1
TODO: change this parameter. Right now, as long as the number is not 1, this will multiply the distance between two points by the distance between the closest points on the parameterized rays.

d_use_hamiltonian - default value: 0
If this is not zero, this will override all the above distortions. Distance will be computed using not only position coordinates, but also velocity coordinates. Velocity componnents are scaled by the value of this parameter (before squaring). If the value is negative, than the absolute value of the parameter is used, but the unit velocities are used instead of the actual velocities.

use_ne_for_maxmin - default value: False
Whether or not to apply the above distance distortions to the max-min landmark selection (not recommended). Has no effect if landmark selector is EST.



OUTPUT OPTIONS:

out - default value: None
A file name for the output of this program to be written to. If the file already exists, its contents will be completely overwritten. This parameter is entirely optional.

program - default value: "Perseus"
Which program the output file should be written for. The two supported programs are "Perseus" and "PHAT".

dimension_cuttoff - default value: 2
Simplexes with dimension greater than the dimension cuttoff will be seperated into their lower dimensional subsets when writing to the output file. This is very handy, as both Perseus and PHAT seem to take exponential time as a function of the dimension of a simplex. The caveat is that all homology greater than or equal to the dimension cutoff will be inacurate. Thus, if one cares about Betti 2, dimension cutoff should be at least 3.



MISCELLANEOUS FEATURES:

connect_time_1_skeleton - default value: False
If this is set to True, than on the first step of the filtration, each landmark will be adjoined by an edge to the next landmark in time. Note: this works best with EST landmark selection. If max-min is used, be sure to set time_order_landmarks to True.

reentry_filter - default value: False
Attempts to limit high dimensional simplices by requiring that landmarks get far away then come back. This only works if using cliques. Note: this works best with EST landmark selection. If max-min is used, be sure to set time_order_landmarks to True.

time_order_landmarks - default value: False
If max-min landmark selection is used, this will order the landmarks temporally. If using max-min in conjunction with any feature that exploits the ordering of the data in any way, such as connect_time_1_skeleton, reentry_filter, or use_twr, this parameter should be set to True. Otherwise, the order of the landmarks is by default the order in which the max-min algorithm selected them.

store_top_simplices - default value: True
If there is a dimension cutoff in use, this parameter determines at which point in the process the simplices are decomposed. By setting this to False, smaller simplices will be stored when they are discovered. This makes the output file a bit smaller, but takes a bit longer. The results will be left unchanged.

sort_output - default value: False
If program is Perseus, this will sort the output by birth time. TODO: This feature does not always work, and may need rewriting.